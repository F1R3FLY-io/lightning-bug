name: CI and Release
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  test-headless:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set up Clojure
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest

      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            .cpcache
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Install dependencies
        run: npm install

      - name: Run type tests
        run: npm run test:types

      - name: Run headless tests
        run: npm run test:headless

  test-headless-advanced:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set up Clojure
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest

      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            .cpcache
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Install dependencies
        run: npm install

      - name: Run headless advanced tests
        run: npm run test:headless-advanced

  release:
    needs: [test-headless, test-headless-advanced]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set up Clojure
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest

      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            .cpcache
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Install dependencies
        run: npm install

      - name: Build library
        run: npx shadow-cljs release libs

      - name: Publish to GitHub Packages
        run: npm publish --access public
